import '../lib';
import * as fs from 'fs';
import { expect } from 'chai';
import { isBadCM, theSameColor, hexToLab } from '../../server/cmUtils';
import { clearCompareResults } from '../lib';
import { createCanvas } from '../../server/canvasUtilsNode';
import { pathTo } from '../../server/paths';

const positives: { [key: string]: [string, string[]]; } = {
	blackOnTransparent: ['ff0000', [
		'000000', '      ', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'000000', '000000', '000000', '      ', '000000',
	]],
	shortArm: ['ff0000', [
		'      ', '      ', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'000000', '000000', '000000', '      ', '000000',
	]],
	noCoat: ['', [
		'000000', '      ', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'000000', '000000', '000000', '      ', '000000',
	]],
	blackOnWhite: ['ff0000', [
		'000000', 'ffffff', '000000', '000000', '000000',
		'000000', 'ffffff', '000000', 'ffffff', 'ffffff',
		'000000', '000000', '000000', '000000', '000000',
		'ffffff', 'ffffff', '000000', 'ffffff', '000000',
		'000000', '000000', '000000', 'ffffff', '000000',
	]],
	fadingEnds: ['ff0000', [
		'      ', '      ', 'ffa500', 'ffa500', '      ',
		'ffa500', '      ', 'ffa500', '      ', '      ',
		'ffa500', 'ffdb99', 'fff2db', 'ffdb99', 'ffa500',
		'      ', '      ', 'ffdb99', '      ', 'ffa500',
		'      ', 'ffa500', 'ffa500',
	]],
	shortLong: ['000000', [
		'      ', '      ', 'ffffff', 'ffffff', 'ffffff',
		'ffffff', '      ', 'ffffff', '      ', '      ',
		'ffffff', 'ffffff', 'ffffff', 'ffffff', 'ffffff',
		'      ', '      ', 'ffffff', '      ', 'ffffff',
		'ffffff', 'ffffff', 'ffffff',
	]],
	longShort: ['000000', [
		'ffffff', '      ', 'ffffff', 'ffffff', '      ',
		'ffffff', '      ', 'ffffff', '      ', '      ',
		'ffffff', 'ffffff', 'ffffff', 'ffffff', 'ffffff',
		'      ', '      ', 'ffffff', '      ', 'ffffff',
		'      ', 'ffffff', 'ffffff', '      ', 'ffffff',
	]],
	fadingEndsOnRed: ['ff0000', [
		'ff0000', 'ff0000', 'ffa500', 'ffa500', 'ff0000',
		'ffa500', 'ff0000', 'ffa500', 'ff0000', 'ff0000',
		'ffa500', 'ffdb99', 'fff2db', 'ffdb99', 'ffa500',
		'ff0000', 'ff0000', 'ffdb99', 'ff0000', 'ffa500',
		'ff0000', 'ffa500', 'ffa500', 'ff0000', 'ff0000',
	]],
	fadedRedRect: ['ff0000', [
		'443737', 'e6cdcd', '0c0b0b', '443737', '443737',
		'443737', '      ', '773e3e', '      ', 'e6cdcd',
		'0c0b0b', '773e3e', '443737', '773e3e', '0c0b0b',
		'e6cdcd', '      ', '773e3e', '      ', '443737',
		'443737', '443737', '0c0b0b', 'e6cdcd', '443737',
	]],
	fadedRedRectOnWhite: ['ff0000', [
		'443737', 'e6cdcd', '0c0b0b', '443737', '443737',
		'443737', 'ffffff', '773e3e', 'ffffff', 'e6cdcd',
		'0c0b0b', '773e3e', '443737', '773e3e', '0c0b0b',
		'e6cdcd', 'ffffff', '773e3e', 'ffffff', '443737',
		'443737', '443737', '0c0b0b', 'e6cdcd', '443737',
	]],
	grayOnGray: ['999595', [
		'403d39', '999595', '403d39', '403d39', '403d39',
		'403d39', '999595', '403d39', '999595', '999595',
		'403d39', '403d39', '403d39', '403d39', '403d39',
		'999595', '999595', '403d39', '999595', '403d39',
		'403d39', '403d39', '403d39', '999595', '403d39',
	]],
	whiteWithCornersAndEnds: ['000000', [
		'a5a5a5', '443434', 'a07575', 'ffffff', 'a5a5a5',
		'ffffff', '3d0000', 'ffffff', '3d0000', '443434',
		'a07575', 'ffffff', 'ffffff', 'ffffff', 'a07575',
		'443434', '3d0000', 'ffffff', '3d0000', 'ffffff',
		'a5a5a5', 'ffffff', 'a07575', '443434', 'a5a5a5',
	]],
	aryanne: ['ebebeb', [
		'000000', '000000', '000000', '      ', '000000',
		'      ', 'ffb5b5', '000000', 'ffb5b5', '000000',
		'000000', '000000', '000000', '000000', '000000',
		'000000', 'ffb5b5', '000000', 'ffb5b5', '      ',
		'000000', '      ', '000000', '000000', '000000',
	]],
	blackWithRedGlowOnPink: ['f9c6ff', [
		'6f2b2b', 'ff9d9d', '52004e', '52004e', '6f2b2b',
		'52004e', 'ff6363', '000000', 'ff6363', 'ff9d9d',
		'52004e', '000000', '000000', '000000', '52004e',
		'ff9d9d', 'ff6363', '000000', 'ff6363', '52004e',
		'6f2b2b', '52004e', '52004e', 'ff9d9d', '6f2b2b',
	]],
	rainbod: ['000000', [
		'b62709', '      ', 'b62709', 'b62709', 'b62709',
		'ee7b11', '      ', 'ee7b11', '      ', '      ',
		'eeb711', 'eeb711', 'eeb711', 'eeb711', 'eeb711',
		'      ', '      ', '178c0d', '      ', '178c0d',
		'4296df', '4296df', '4296df', '      ', '4296df',
	]],
	asymetric: ['aa957e', [
		'000000', '000000', '000000', '      ', '      ',
		'      ', '      ', '000000', '      ', '000000',
		'000000', '000000', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'      ', '      ', '000000', '000000', '000000',
	]],
	oneLongArm: ['ffffff', [
		'      ', '      ', '000000', '000000', '      ',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'      ', '000000', '000000', '      ', '000000',
	]],
	noCorners: ['ffffff', [
		'000000', '000000', '      ', '      ', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'      ', '000000', '000000', '000000', '      ',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '      ', '      ', '000000', '000000',
	]],
	noCornersReverse: ['ffffff', [
		'000000', '      ', '      ', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'      ', '000000', '000000', '000000', '      ',
		'      ', '      ', '000000', '      ', '000000',
		'000000', '000000', '      ', '      ', '000000',
	]],
	faded: ['6d8064', [
		'363636', '6e4b4b', '363636', '363636', '363636',
		'363636', '8f4e4e', '363636', '8f4e4e', '6e4b4b',
		'363636', '363636', '363636', '363636', '363636',
		'6e4b4b', '8f4e4e', '363636', '8f4e4e', '363636',
		'363636', '363636', '363636', '6e4b4b', '363636',
	]],
	missingBit: ['5d617c', [
		'      ', '464d6e', '464d6e', '      ', '      ',
		'      ', '      ', '464d6e', '      ', '464d6e',
		'464d6e', '464d6e', '464d6e', '464d6e', '464d6e',
		'464d6e', '      ', '464d6e', '      ', '      ',
		'      ', '      ', '464d6e', '464d6e',
	]],
	smallTopRight: ['', [
		'      ', '160404', '160404', '      ', '160404',
		'      ', '      ', '160404', '160404', '160404',
		'      ', '160404', '160404', '160404', '      ',
		'      ', '160404', '      ', '160404', '160404',
		'      ', '      ', '      ', '      ', '      ',
	]],
	smallTopLeft: ['', [
		'160404', '160404', '      ', '160404', '      ',
		'      ', '160404', '160404', '160404', '      ',
		'160404', '160404', '160404', '      ', '      ',
		'160404', '      ', '160404', '160404', '      ',
		'      ', '      ', '      ', '      ', '      ',
	]],
	smallBottomRight: ['', [
		'      ', '      ', '      ', '      ', '      ',
		'      ', '160404', '160404', '      ', '160404',
		'      ', '      ', '160404', '160404', '160404',
		'      ', '160404', '160404', '160404', '      ',
		'      ', '160404', '      ', '160404', '160404',
	]],
	smallBottomLeft: ['', [
		'      ', '      ', '      ', '      ', '      ',
		'160404', '160404', '      ', '160404', '      ',
		'      ', '160404', '160404', '160404', '      ',
		'160404', '160404', '160404', '      ', '      ',
		'160404', '      ', '160404', '160404', '      ',
	]],
	smallTopRightRev: ['', [
		'      ', '160404', '      ', '160404', '160404',
		'      ', '160404', '160404', '160404', '      ',
		'      ', '      ', '160404', '160404', '160404',
		'      ', '160404', '160404', '      ', '160404',
		'      ', '      ', '      ', '      ', '      ',
	]],
	weirdShape: ['', [
		'fffffe', '000000', '000000', 'fffffe', '000000',
		'fffffe', 'fff9ee', '000000', 'fff9ee', '000000',
		'fffbf4', '000000', '000000', '000000', '000000',
		'fff9ee', '000000', 'fffffe', '000000', 'fff9ee',
		'fff9ee', '000000', 'fffffe', '000000', '000000',
	]],
	wonky: ['ffffff', [
		'000000', '      ', '000000', '000000', '      ',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '000000', '      ', '      ', '000000',
		'000000', '000000', '      ', '      ', '000000',
	]],
	wonky2: ['ffffff', [
		'000000', '      ', '      ', '000000', '000000',
		'000000', '      ', '      ', '000000', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'      ', '000000', '000000', '      ', '000000',
	]],
	wonky3: ['ffffff', [
		'      ', '      ', 'ff0000', 'ff0000', 'ff0000',
		'ff0000', '      ', 'e70000', '      ', '      ',
		'      ', 'ff0000', 'e70000', 'ff0000', '      ',
		'      ', '      ', 'e70000', '      ', 'ff0000',
		'ff0000', 'ff0000', '      ', '      ', 'ff0000',
	]],
	wonky4: ['ffffff', [
		'ff0000', '      ', 'ff0000', 'ff0000', 'ff0000',
		'ff0000', '      ', 'e70000', '      ', '      ',
		'      ', 'ff0000', 'e70000', 'ff0000', '      ',
		'      ', '      ', 'e70000', '      ', 'ff0000',
		'ff0000', 'ff0000', '      ', '      ', '      ',
	]],
	wonky5: ['ffffff', [
		'ff0000', '      ', '      ', 'ff0000', '      ',
		'ff0000', '      ', 'e70000', '      ', '      ',
		'      ', 'ff0000', 'e70000', 'ff0000', '      ',
		'      ', '      ', 'e70000', '      ', 'ff0000',
		'ff0000', 'ff0000', '      ', '      ', 'ff0000',
	]],
	wonky6: ['ffffff', [
		'ff0000', '      ', '      ', 'ff0000', 'ff0000',
		'ff0000', '      ', 'e70000', '      ', '      ',
		'      ', 'ff0000', 'e70000', 'ff0000', '      ',
		'      ', '      ', 'e70000', '      ', 'ff0000',
		'      ', 'ff0000', '      ', '      ', 'ff0000',
	]],
	wonky7: ['000000', [
		'ffffff', '      ', 'ffffff', 'ffffff', 'ffffff',
		'ffffff', '      ', 'ffffff', '      ', '      ',
		'ffffff', 'ffffff', 'ffffff', 'ffffff', 'ffffff',
		'      ', '      ', 'ffffff', 'ffffff', 'ffffff',
		'ffffff', 'ffffff', 'ffffff', '      ', 'ffffff',
	]],
	wonky8: ['000000', [
		'ffffff', '      ', 'ffffff', 'ffffff', 'ffffff',
		'ffffff', '      ', 'ffffff', '      ', '      ',
		'ffffff', 'ffffff', 'ffffff', 'ffffff', 'ffffff',
		'      ', 'ffffff', 'ffffff', '      ', 'ffffff',
		'ffffff', 'ffffff', 'ffffff', '      ', 'ffffff',
	]],
	wonky9: ['ffffff', [
		'000000', '000000', '000000', 'ffffff', '000000',
		'ffffff', 'ffffff', '160b0b', 'ffffff', '000000',
		'000000', '000000', '000000', '000000', 'ffffff',
		'000000', 'ffffff', '000000', 'ffffff', 'ffffff',
		'ffffff', 'ffffff', '000000', '000000', '000000',
	]],
	wonky10: ['ffffff', [
		'000000', '      ', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'      ', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'000000', '000000', '000000', '      ', '000000',
	]],
	// layered: ['f0dcff', [
	// 	'080808', 'd9f4c8', '080808', '6d6d6d', '080808',
	// 	'6d6d6d', 'd9f4c8', '080808', 'd9f4c8', 'd9f4c8',
	// 	'080808', '080808', '6d6d6d', '080808', '080808',
	// 	'd9f4c8', 'd9f4c8', '080808', 'd9f4c8', '6d6d6d',
	// 	'080808', '6d6d6d', '080808', 'd9f4c8', '080808',
	// ]],
	// layered2: ['d1b078', [
	// 	'000000', 'b8ffce', '000000', '065e21', '000000',
	// 	'065e21', 'b8ffce', '065e21', 'b8ffce', 'b8ffce',
	// 	'000000', '065e21', '065e21', '065e21', '000000',
	// 	'b8ffce', 'b8ffce', '065e21', 'b8ffce', '065e21',
	// 	'000000', '065e21', '000000', 'b8ffce', '000000',
	// ]],
	// redOrange: ['fed395', [
	// 	'ff0000', 'ffa859', 'ff0000', 'ff0000', 'ff0000',
	// 	'ff0000', 'ffa859', 'ff0000', 'ffa859', 'ffa859',
	// 	'ff0000', 'ff0000', 'ff0000', 'ff0000', 'ff0000',
	// 	'ffa859', 'ffa859', 'ff0000', 'ffa859', 'ff0000',
	// 	'ff0000', 'ff0000', 'ff0000', 'ffa859', 'ff0000',
	// ]],
	grayOnGray2: ['808080', [
		'808080', '      ', '808080', '808080', '808080',
		'808080', '      ', '808080', '      ', '      ',
		'808080', '808080', '808080', '808080', '808080',
		'      ', '      ', '808080', '      ', '808080',
		'808080', '808080', '808080', '      ', '808080',
	]],
	missingArm1: ['ffffff', [
		'      ', '      ', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'000000', '000000', '000000', '      ', '000000',
	]],
	missingArm2: ['ffffff', [
		'000000', '      ', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '      ', '      ',
	]],
	missingArm3: ['ffffff', [
		'000000', '      ', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '      ',
		'000000', '000000', '000000', '000000', '000000',
		'      ', '      ', '000000', '      ', '000000',
		'      ', '      ', '000000', '      ', '000000',
	]],
};

const negatives: { [key: string]: [string, string[]]; } = {
	empty: ['ff0000', []],
	short: ['ff0000', ['ff0000', '00ff00']],
	black: ['ff0000', [
		'000000', '000000', '000000', '000000', '000000',
		'000000', '000000', '000000', '000000', '000000',
		'000000', '000000', '000000', '000000', '000000',
		'000000', '000000', '000000', '000000', '000000',
		'000000', '000000', '000000', '000000', '000000',
	]],
	random: ['ff0000', [
		'000000', '      ', '      ', '000000', '000000',
		'000000', '000000', '000000', '      ', '000000',
		'000000', '      ', '      ', '000000', '000000',
		'      ', '000000', '000000', '000000', '      ',
		'000000', '      ', '000000', '000000', '000000',
	]],
	almostSwastika: ['ff0000', [
		'000000', '111111', '000000', '000000', '000000',
		'000000', '      ', '000000', '      ', '111111',
		'000000', '000000', '000000', '000000', '000000',
		'111111', '      ', '000000', '      ', '000000',
		'000000', '000000', '000000', '111111', '000000',
	]],
	flower: ['d7d8ef', [
		'      ', 'eb7db2', '      ', 'df639f', '      ',
		'df639f', 'ad517d', '      ', 'ad517d', 'eb7db2',
		'      ', '      ', 'e8b2cc', '      ', '      ',
		'eb7db2', '8f4569', '      ', '8f4569', 'ad517d',
		'      ', 'ad517d', '      ', 'eb7db2', '      ',
	]],
	// swirl: ['fee9f8', [
	// 	'      ', 'ab4842', '      ', '      ', '      ',
	// 	'      ', 'ab4842', '      ', 'ab4842', 'ab4842',
	// 	'      ', '      ', 'ab4842', '      ', '      ',
	// 	'ab4842', 'ab4842', '      ', 'ab4842', '      ',
	// 	'      ', '      ', '      ', 'ab4842', '      ',
	// ]],
	floweryThing: ['a636df', [
		'      ', '00b6b9', '208be8', '00026c', '      ',
		'00026c', '      ', '13824b', '      ', '00b6b9',
		'3c077a', '13824b', '      ', 'bb83fe', '3c077a',
		'00b6b9', '      ', 'bb83fe', '      ', '00026c',
		'      ', '00026c', '208be8', '00b6b9', '      ',
	]],
	hashTag: ['d5d4d4', [
		'      ', '173953', '      ', '1084dc', '      ',
		'1084dc', '1084dc', '173953', '1084dc', '173953',
		'      ', '173953', '0090fe', '173953', '      ',
		'173953', '1084dc', '173953', '1084dc', '1084dc',
		'      ', '1084dc', '      ', '173953', '      ',
	]],
	flower2: ['ffab8b', [
		'      ', 'ff446a', 'ff6484', 'ff7a95', '      ',
		'ff7a95', 'ff446a', 'ff6484', 'ff446a', 'ff446a',
		'ff6484', 'ff6484', '      ', 'ff6484', 'ff6484',
		'ff446a', 'ff446a', 'ff6484', 'ff446a', 'ff7a95',
		'      ', 'ff7a95', 'ff6484', 'ff446a', '      ',
	]],
};

function createCMCanvas(coat: string, cm: string[]) {
	const canvas = createCanvas(7, 7);
	const context = canvas.getContext('2d')!;
	context.fillStyle = `#${coat}`;
	context.fillRect(0, 0, canvas.width, canvas.height);

	for (let y = 0, i = 0; y < 5; y++) {
		for (let x = 0; x < 5; x++ , i++) {
			if ((cm[i] || '').trim()) {
				context.fillStyle = `#${cm[i]}`;
				context.fillRect(x + 1, y + 1, 1, 1);
			}
		}
	}

	return canvas;
}

function check(name: string, [coat, cm]: [string, string[]], expected: boolean) {
	const result = isBadCM(cm.map(x => x.trim()), coat);

	if (!!result !== expected) {
		const canvas = createCMCanvas(coat, cm);
		fs.writeFileSync(pathTo('tools', 'temp', 'cms', `${name}-${expected ? 'bad' : 'good'}.png`), canvas.toBuffer());
	}

	expect(!!result).equal(expected, result);
}

function checkColor(a: string, b: string) {
	return theSameColor(hexToLab(a), hexToLab(b));
}

describe('cmUtils', () => {
	before(() => clearCompareResults('cms'));

	describe('isBadCM()', () => {
		Object.keys(positives).forEach(key => {
			it(`returns true for positive (${key})`, () => {
				check(key, positives[key], true);
			});
		});

		Object.keys(negatives).forEach(key => {
			it(`returns false for negative (${key})`, () => {
				check(key, negatives[key], false);
			});
		});
	});

	describe('checkColor()', () => {
		it('returns false for 000000 and ffffff', () => {
			expect(checkColor('000000', 'ffffff')).false;
		});

		it('returns true for 000000 and 000000', () => {
			expect(checkColor('000000', '000000')).true;
		});

		it('returns true for 000000 and 52004e', () => {
			//console.log('000000', '52004e', getDeltaE00(hexToLab('000000'), hexToLab('52004e')));
			expect(checkColor('000000', '52004e')).true;
		});

		it('returns false for eb7db2 and d7d8ef', () => {
			//console.log('eb7db2', 'd7d8ef', getDeltaE00(hexToLab('eb7db2'), hexToLab('d7d8ef')));
			expect(checkColor('eb7db2', 'd7d8ef')).false;
		});
	});
});
